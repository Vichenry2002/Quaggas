{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\willi\\\\Documents\\\\School\\\\2023F\\\\COMP307\\\\finalproject\\\\Quaggas\\\\root\\\\client\\\\src\\\\components\\\\Register.js\";\nimport React, { useState } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport './Register.css';\nconst bcrypt = require('bcryptjs');\nconst saltRounds = 10;\nexport default function Create() {\n  const [form, setForm] = useState({\n    user_id: \"\",\n    hashedpswd: \"\",\n    discussions: []\n  });\n  const navigate = useNavigate();\n  // These methods will update the state properties.\n  function updateForm(value) {\n    return setForm(prev => {\n      return {\n        ...prev,\n        ...value\n      };\n    });\n  }\n  // This function will handle the submission.\n  async function onSubmit(e) {\n    e.preventDefault();\n    // When a post request is sent to the create url, we'll add a new record to the database.\n    const newPerson = {\n      ...form\n    };\n    const ps = await bcrypt.hash(newPerson.hashedpswd, saltRounds);\n    newPerson.hashedpswd = ps;\n    await fetch(\"http://localhost:8081/record/add\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newPerson)\n    }).catch(error => {\n      console.log(\"co\");\n      window.alert(error);\n      return;\n    });\n    console.log(\"form not clearing\");\n    setForm({\n      user_id: \"\",\n      hashedpswd: \"\"\n    });\n    navigate(\"/\");\n  }\n  // This following section will display the form that takes the input from the user.\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"register-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/Quaggas.png\",\n    alt: \"Quaggas Logo\",\n    className: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"description-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, \"Join our community to start discussions!\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"user_id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }, \"Username:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"user_id\",\n    value: form.user_id,\n    onChange: e => updateForm({\n      user_id: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"hashedpswd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  }, \"Password:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    id: \"hashedpswd\",\n    value: form.hashedpswd,\n    onChange: e => updateForm({\n      hashedpswd: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  }, \"Register\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"account-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 29\n    }\n  }, \"Already have an account?\")))));\n}","map":{"version":3,"names":["React","useState","useNavigate","Link","bcrypt","require","saltRounds","Create","form","setForm","user_id","hashedpswd","discussions","navigate","updateForm","value","prev","onSubmit","e","preventDefault","newPerson","ps","hash","fetch","method","headers","body","JSON","stringify","catch","error","console","log","window","alert","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","htmlFor","type","id","onChange","target","to"],"sources":["C:/Users/willi/Documents/School/2023F/COMP307/finalproject/Quaggas/root/client/src/components/Register.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport './Register.css';\r\nconst bcrypt = require('bcryptjs');\r\nconst saltRounds=10;\r\n\r\nexport default function Create() {\r\n    const [form, setForm] = useState({\r\n        user_id: \"\",\r\n        hashedpswd: \"\",\r\n        discussions: []\r\n    });\r\n    const navigate = useNavigate();\r\n    // These methods will update the state properties.\r\n    function updateForm(value) {\r\n        return setForm((prev) => {\r\n            return { ...prev, ...value };\r\n        });\r\n    }\r\n    // This function will handle the submission.\r\n    async function onSubmit(e) {\r\n        e.preventDefault();\r\n        // When a post request is sent to the create url, we'll add a new record to the database.\r\n        const newPerson = { ...form };\r\n        const ps=await bcrypt.hash(newPerson.hashedpswd,saltRounds);\r\n        newPerson.hashedpswd= ps;\r\n        await fetch(\"http://localhost:8081/record/add\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(newPerson),\r\n        })\r\n            .catch(error => {\r\n                console.log(\"co\")\r\n                window.alert(error);\r\n                return;\r\n            });\r\n        console.log(\"form not clearing\")\r\n        setForm({ user_id: \"\", hashedpswd: \"\" });\r\n        navigate(\"/\");\r\n    }\r\n    // This following section will display the form that takes the input from the user.\r\n    return (\r\n        <div className=\"register-page\">\r\n            <div className=\"header-content\">\r\n                <img src=\"/Quaggas.png\" alt=\"Quaggas Logo\" className=\"logo\" />\r\n            </div>\r\n            <div className=\"description-content\">\r\n                <p>Join our community to start discussions!</p>\r\n            </div>\r\n            <div className=\"form-wrapper\">\r\n                <form onSubmit={onSubmit}>\r\n                    <div className=\"input-container\">\r\n                        <label htmlFor=\"user_id\">Username:</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"user_id\"\r\n                            value={form.user_id}\r\n                            onChange={(e) => updateForm({ user_id: e.target.value })}\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-container\">\r\n                        <label htmlFor=\"hashedpswd\">Password:</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"hashedpswd\"\r\n                            value={form.hashedpswd}\r\n                            onChange={(e) => updateForm({ hashedpswd: e.target.value })}\r\n                        />\r\n                    </div>\r\n                    <div className=\"buttons-container\">\r\n                        <button type=\"submit\">\r\n                            Register\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"account-link\">\r\n                            <Link to=\"/\">Already have an account?</Link>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}