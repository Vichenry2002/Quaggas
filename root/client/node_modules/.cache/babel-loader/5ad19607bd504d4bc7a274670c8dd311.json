{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\willi\\\\Documents\\\\School\\\\2023F\\\\COMP307\\\\finalproject\\\\Quaggas\\\\root\\\\client\\\\src\\\\components\\\\Dashboard.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport DiscussionsPopUp from './CreateDiscussion'; // Import your DiscussionsPopUp component\nimport './Dashboard.css';\n\n/*\r\nUpon creation, a discussion is added to the discussions collection. Further, the id of the collection and its title are stored as a tuple in the user collection.\r\nUpon initialization of the dashboard, a get request is sent to the discussion field of the user's collection. \r\nLeave discussion done.\r\nNow work on adding admins/users\r\n */\n\nexport default function UserDashboard() {\n  const [userDiscussions, setUserDiscussions] = useState([]);\n  const [isPopUpOpen, setPopUpOpen] = useState(false); // State for managing the pop-up\n  const userId = \"vhenry_test1\"; // Replace with actual user ID (from auth or context)\n  const navigate = useNavigate();\n  const navigateToDiscussion = discussionId => {\n    navigate(`/discussion/${discussionId}`);\n  };\n  useEffect(() => {\n    fetchUserDiscussions();\n  }, []);\n  const fetchUserDiscussions = async () => {\n    try {\n      const response = await fetch(`http://localhost:8081/user/${userId}/discussions`);\n      const userData = await response.json();\n      if (userData && Array.isArray(userData)) {\n        setUserDiscussions(userData);\n      } else {\n        console.error(\"Invalid or no data for user discussions\");\n        setUserDiscussions([]);\n      }\n    } catch (error) {\n      console.error(\"Error fetching user discussions:\", error);\n    }\n  };\n  const handleAddDiscussion = discussionId => {\n    console.log(\"Add to discussion\", discussionId);\n    // Implement add to discussion logic here\n  };\n\n  const handleLeaveDiscussion = async discussionId => {\n    console.log(\"Leave discussion\", discussionId);\n    try {\n      // Assuming 'discussionTitle' is available in this scope, \n      // if not, you need to ensure it is passed to this function or retrieved from state\n      const discussionTitle = \"Some discussion title\"; // Placeholder\n\n      console.log(\"TEST: \" + discussionId);\n\n      //delete from user list of discussions\n      await fetch(`http://localhost:8081/user/${userId}/${discussionId}/remove`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n\n      //delete from discussion list of users\n      await fetch(`http://localhost:8081/discussion/${discussionId}/${userId}/remove`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n\n      // Update the local state to reflect the change\n      deleteDiscussion(discussionId);\n    } catch (error) {\n      console.error(\"Error leaving discussion:\", error);\n    }\n  };\n  const handleDeleteDiscussion = discussionId => {\n    console.log(\"Delete discussion\", discussionId);\n    // Implement delete discussion logic here\n  };\n\n  const togglePopUp = () => {\n    // Toggle the pop-up modal\n    setPopUpOpen(!isPopUpOpen);\n  };\n  const addNewDiscussion = newDiscussion => {\n    setUserDiscussions(prevDiscussions => [...prevDiscussions, newDiscussion]);\n  };\n  const deleteDiscussion = discussionId => {\n    setUserDiscussions(prevDiscussions => prevDiscussions.filter(discussion => discussion.discussionId !== discussionId));\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"dashboard-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, \"Welcome to your Dashboard\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"create-button\",\n    onClick: togglePopUp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, \"Create\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"discussion-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, userDiscussions && userDiscussions.map((discussion, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    className: \"discussion-item\",\n    onClick: () => navigateToDiscussion(discussion.discussionId)\n    // Add any required styling here to make it look clickable\n    ,\n    style: {\n      cursor: 'pointer'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 25\n    }\n  }, discussion.title), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button\",\n    onClick: e => {\n      e.stopPropagation(); // Prevents click from bubbling up to the li element\n      handleAddDiscussion(discussion.discussionId);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 29\n    }\n  }, \"Add Users\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button\",\n    onClick: e => {\n      e.stopPropagation(); // Prevents click from bubbling up to the li element\n      handleLeaveDiscussion(discussion.discussionId);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 29\n    }\n  }, \"Leave\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button\",\n    onClick: e => {\n      e.stopPropagation(); // Prevents click from bubbling up to the li element\n      handleDeleteDiscussion(discussion.discussionId);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 29\n    }\n  }, \"Delete\"))))), isPopUpOpen && /*#__PURE__*/React.createElement(DiscussionsPopUp, {\n    isOpen: isPopUpOpen,\n    onRequestClose: togglePopUp,\n    addNewDiscussion: addNewDiscussion // Passing the function as a prop\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"names":["React","useState","useEffect","useNavigate","DiscussionsPopUp","UserDashboard","userDiscussions","setUserDiscussions","isPopUpOpen","setPopUpOpen","userId","navigate","navigateToDiscussion","discussionId","fetchUserDiscussions","response","fetch","userData","json","Array","isArray","console","error","handleAddDiscussion","log","handleLeaveDiscussion","discussionTitle","method","headers","deleteDiscussion","handleDeleteDiscussion","togglePopUp","addNewDiscussion","newDiscussion","prevDiscussions","filter","discussion","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","index","key","style","cursor","title","e","stopPropagation","isOpen","onRequestClose"],"sources":["C:/Users/willi/Documents/School/2023F/COMP307/finalproject/Quaggas/root/client/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport DiscussionsPopUp from './CreateDiscussion'; // Import your DiscussionsPopUp component\r\nimport './Dashboard.css';\r\n\r\n\r\n/*\r\nUpon creation, a discussion is added to the discussions collection. Further, the id of the collection and its title are stored as a tuple in the user collection.\r\nUpon initialization of the dashboard, a get request is sent to the discussion field of the user's collection. \r\nLeave discussion done.\r\nNow work on adding admins/users\r\n */\r\n\r\nexport default function UserDashboard() {\r\n    const [userDiscussions, setUserDiscussions] = useState([]);\r\n    const [isPopUpOpen, setPopUpOpen] = useState(false); // State for managing the pop-up\r\n    const userId = \"vhenry_test1\"; // Replace with actual user ID (from auth or context)\r\n    const navigate = useNavigate();\r\n\r\n    const navigateToDiscussion = (discussionId) => {\r\n        navigate(`/discussion/${discussionId}`);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchUserDiscussions();\r\n    }, []);\r\n\r\n    const fetchUserDiscussions = async () => {\r\n        try {\r\n            const response = await fetch(`http://localhost:8081/user/${userId}/discussions`);\r\n            const userData = await response.json();\r\n            \r\n            if (userData && Array.isArray(userData)) {\r\n                setUserDiscussions(userData);\r\n            } else {\r\n                console.error(\"Invalid or no data for user discussions\");\r\n                setUserDiscussions([]);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error fetching user discussions:\", error);\r\n        }\r\n    };\r\n\r\n    const handleAddDiscussion = (discussionId) => {\r\n        console.log(\"Add to discussion\", discussionId);\r\n        // Implement add to discussion logic here\r\n    };\r\n\r\n    const handleLeaveDiscussion = async (discussionId) => {\r\n        console.log(\"Leave discussion\", discussionId);\r\n        try {\r\n            // Assuming 'discussionTitle' is available in this scope, \r\n            // if not, you need to ensure it is passed to this function or retrieved from state\r\n            const discussionTitle = \"Some discussion title\"; // Placeholder\r\n\r\n            console.log(\"TEST: \" + discussionId);\r\n    \r\n            //delete from user list of discussions\r\n            await fetch(`http://localhost:8081/user/${userId}/${discussionId}/remove`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            });\r\n    \r\n            //delete from discussion list of users\r\n            await fetch(`http://localhost:8081/discussion/${discussionId}/${userId}/remove`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            });\r\n    \r\n            // Update the local state to reflect the change\r\n            deleteDiscussion(discussionId);\r\n        } catch (error) {\r\n            console.error(\"Error leaving discussion:\", error);\r\n        }\r\n    };\r\n    \r\n\r\n    const handleDeleteDiscussion = (discussionId) => {\r\n        console.log(\"Delete discussion\", discussionId);\r\n        // Implement delete discussion logic here\r\n    };\r\n\r\n    const togglePopUp = () => {\r\n        // Toggle the pop-up modal\r\n        setPopUpOpen(!isPopUpOpen);\r\n    };\r\n\r\n    const addNewDiscussion = (newDiscussion) => {\r\n        setUserDiscussions(prevDiscussions => [...prevDiscussions, newDiscussion]);\r\n    };\r\n\r\n    const deleteDiscussion = (discussionId) => {\r\n        setUserDiscussions(prevDiscussions => prevDiscussions.filter(discussion => discussion.discussionId !== discussionId));\r\n    };\r\n    \r\n\r\n    return (\r\n        <div className=\"dashboard-container\">\r\n            <div className=\"dashboard-header\">\r\n                <h1 className=\"dashboard-title\">Welcome to your Dashboard</h1>\r\n                <button className=\"create-button\" onClick={togglePopUp}>Create</button>\r\n            </div>\r\n            <ul className=\"discussion-list\">\r\n                {userDiscussions && userDiscussions.map((discussion, index) => (\r\n                    <li \r\n                        key={index} \r\n                        className=\"discussion-item\" \r\n                        onClick={() => navigateToDiscussion(discussion.discussionId)}\r\n                        // Add any required styling here to make it look clickable\r\n                        style={{ cursor: 'pointer' }} \r\n                    >\r\n                        <span>{discussion.title}</span>\r\n                        <div>\r\n                            <button className=\"button\" onClick={(e) => {\r\n                                e.stopPropagation(); // Prevents click from bubbling up to the li element\r\n                                handleAddDiscussion(discussion.discussionId);\r\n                            }}>Add Users</button>\r\n                            <button className=\"button\" onClick={(e) => {\r\n                                e.stopPropagation(); // Prevents click from bubbling up to the li element\r\n                                handleLeaveDiscussion(discussion.discussionId);\r\n                            }}>Leave</button>\r\n                            <button className=\"button\" onClick={(e) => {\r\n                                e.stopPropagation(); // Prevents click from bubbling up to the li element\r\n                                handleDeleteDiscussion(discussion.discussionId);\r\n                            }}>Delete</button>\r\n                        </div>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            \r\n            {isPopUpOpen && (\r\n            <DiscussionsPopUp \r\n                isOpen={isPopUpOpen} \r\n                onRequestClose={togglePopUp} \r\n                addNewDiscussion={addNewDiscussion} // Passing the function as a prop\r\n            />\r\n             )}\r\n        </div>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}