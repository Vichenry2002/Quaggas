{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\willi\\\\Documents\\\\School\\\\2023F\\\\COMP307\\\\finalproject\\\\Quaggas\\\\root\\\\client\\\\src\\\\components\\\\CreateDiscussion.js\";\nimport React, { useState } from 'react';\n//import './DiscussionBoardCreate.css'; // Import your CSS file for styling\n\nexport default function DiscussionBoard({\n  isOpen,\n  onRequestClose,\n  addNewDiscussion\n}) {\n  //TODO: Replace with actual user ID (from auth context or similar)\n  const userId = \"vhenry_test1\";\n  const [form, setForm] = useState({\n    title: \"\",\n    users: [],\n    admins: [],\n    channels: []\n  });\n\n  //const navigate = useNavigate();\n\n  function updateForm(value) {\n    return setForm(prev => ({\n      ...prev,\n      ...value\n    }));\n  }\n  function handleArrayChange(value, field) {\n    // Converts a comma-separated list into an array for admins, users, or channels\n    const array = value.split(',').map(item => item.trim());\n    updateForm({\n      [field]: array\n    });\n  }\n  async function onSubmit(e) {\n    e.preventDefault();\n    const updatedUsers = [...form.users, userId]; // Append userId to the users array\n    const updatedAdmins = [...form.admins, userId];\n    const defaultChannel = [\"main\"];\n    const newBoard = {\n      ...form,\n      users: updatedUsers,\n      admins: updatedAdmins,\n      channels: defaultChannel\n    };\n    try {\n      // Adding discussion to discussions collection\n      let response = await fetch(\"http://localhost:8081/discussions/add\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(newBoard)\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const discussionData = await response.json();\n      const newDiscussion = {\n        id: discussionData.insertedId,\n        title: form.title\n      };\n      addNewDiscussion(newDiscussion);\n      onRequestClose();\n      const discussionId = discussionData.insertedId; // Assuming the ID is returned in the response\n      const discussionTitle = form.title;\n\n      // Adding discussion to user collection\n      await fetch(`http://localhost:8081/user/${userId}/addDiscussion`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          discussionId,\n          discussionTitle\n        })\n      });\n      setForm({\n        title: \"\",\n        users: [],\n        admins: [],\n        channels: []\n      });\n    } catch (error) {\n      console.log(\"Error:\", error);\n      window.alert(error);\n    }\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"discussion-board-create-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, \"Create a New Discussion Board\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, \"Title:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"title\",\n    value: form.title,\n    onChange: e => updateForm({\n      title: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"users\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, \"Users (comma-separated):\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"users\",\n    value: form.users.join(\", \"),\n    onChange: e => handleArrayChange(e.target.value, 'users'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"admins\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, \"Admins (comma-separated):\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"admins\",\n    value: form.admins.join(\", \"),\n    onChange: e => handleArrayChange(e.target.value, 'admins'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"channels\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }, \"Channels (comma-separated):\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"channels\",\n    value: form.channels.join(\", \"),\n    onChange: e => handleArrayChange(e.target.value, 'channels'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, \"Create Discussion Board\")));\n}","map":{"version":3,"names":["React","useState","DiscussionBoard","isOpen","onRequestClose","addNewDiscussion","userId","form","setForm","title","users","admins","channels","updateForm","value","prev","handleArrayChange","field","array","split","map","item","trim","onSubmit","e","preventDefault","updatedUsers","updatedAdmins","defaultChannel","newBoard","response","fetch","method","headers","body","JSON","stringify","ok","Error","discussionData","json","newDiscussion","id","insertedId","discussionId","discussionTitle","error","console","log","window","alert","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","onChange","target","join"],"sources":["C:/Users/willi/Documents/School/2023F/COMP307/finalproject/Quaggas/root/client/src/components/CreateDiscussion.js"],"sourcesContent":["import React, { useState } from 'react';\r\n//import './DiscussionBoardCreate.css'; // Import your CSS file for styling\r\n\r\nexport default function DiscussionBoard({ isOpen, onRequestClose, addNewDiscussion }) {\r\n    //TODO: Replace with actual user ID (from auth context or similar)\r\n    const userId = \"vhenry_test1\";\r\n\r\n    const [form, setForm] = useState({\r\n        title: \"\",\r\n        users: [],\r\n        admins: [],\r\n        channels: []\r\n    });\r\n\r\n   //const navigate = useNavigate();\r\n\r\n    function updateForm(value) {\r\n        return setForm(prev => ({ ...prev, ...value }));\r\n    }\r\n\r\n    function handleArrayChange(value, field) {\r\n        // Converts a comma-separated list into an array for admins, users, or channels\r\n        const array = value.split(',').map(item => item.trim());\r\n        updateForm({ [field]: array });\r\n    }\r\n\r\n    async function onSubmit(e) {\r\n        e.preventDefault();\r\n        const updatedUsers = [...form.users, userId]; // Append userId to the users array\r\n        const updatedAdmins = [...form.admins, userId];\r\n        const defaultChannel = [\"main\"];\r\n\r\n        const newBoard = {\r\n            ...form,\r\n            users: updatedUsers,\r\n            admins: updatedAdmins,\r\n            channels: defaultChannel\r\n        };\r\n\r\n        try {\r\n            // Adding discussion to discussions collection\r\n            let response = await fetch(\"http://localhost:8081/discussions/add\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(newBoard),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }\r\n\r\n\r\n\r\n            const discussionData = await response.json();\r\n\r\n            const newDiscussion = {\r\n                id: discussionData.insertedId,\r\n                title: form.title,\r\n            };\r\n\r\n            addNewDiscussion(newDiscussion);\r\n            onRequestClose();\r\n\r\n            const discussionId = discussionData.insertedId; // Assuming the ID is returned in the response\r\n            const discussionTitle = form.title;\r\n            \r\n\r\n\r\n            // Adding discussion to user collection\r\n            await fetch(`http://localhost:8081/user/${userId}/addDiscussion`, {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({ discussionId , discussionTitle}),\r\n            });\r\n            setForm({ title: \"\", users: [], admins: [], channels: [] });\r\n        } catch (error) {\r\n            console.log(\"Error:\", error);\r\n            window.alert(error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"discussion-board-create-page\">\r\n            <h2>Create a New Discussion Board</h2>\r\n            <form onSubmit={onSubmit}>\r\n                <div className=\"input-container\">\r\n                    <label htmlFor=\"title\">Title:</label>\r\n                    <input \r\n                        type=\"text\"\r\n                        id=\"title\"\r\n                        value={form.title}\r\n                        onChange={(e) => updateForm({ title: e.target.value })}\r\n                    />\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <label htmlFor=\"users\">Users (comma-separated):</label>\r\n                    <input \r\n                        type=\"text\"\r\n                        id=\"users\"\r\n                        value={form.users.join(\", \")}\r\n                        onChange={(e) => handleArrayChange(e.target.value, 'users')}\r\n                    />\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <label htmlFor=\"admins\">Admins (comma-separated):</label>\r\n                    <input \r\n                        type=\"text\"\r\n                        id=\"admins\"\r\n                        value={form.admins.join(\", \")}\r\n                        onChange={(e) => handleArrayChange(e.target.value, 'admins')}\r\n                    />\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <label htmlFor=\"channels\">Channels (comma-separated):</label>\r\n                    <input \r\n                        type=\"text\"\r\n                        id=\"channels\"\r\n                        value={form.channels.join(\", \")}\r\n                        onChange={(e) => handleArrayChange(e.target.value, 'channels')}\r\n                    />\r\n                </div>\r\n                <button type=\"submit\">Create Discussion Board</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}